// File automatically generated by ASDL/asdl_java.py.
mod_ty->ASTMod
_PyAST_mod->new ASTMod()
_PyAST_Module->new Module(ASTStmt[] body, ASTTypeIgnore[] type_ignores)
_PyAST_Interactive->new Interactive(ASTStmt[] body)
_PyAST_Expression->new Expression(ASTExpr body)
_PyAST_FunctionType->new FunctionType(ASTExpr[] argtypes, ASTExpr returns)
stmt_ty->ASTStmt
_PyAST_stmt->new ASTStmt(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_FunctionDef->new FunctionDef(String name, Arguments args, ASTStmt[] body, ASTExpr[] decorator_list, ASTExpr returns, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_AsyncFunctionDef->new AsyncFunctionDef(String name, Arguments args, ASTStmt[] body, ASTExpr[] decorator_list, ASTExpr returns, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_ClassDef->new ClassDef(String name, ASTExpr[] bases, Keyword[] keywords, ASTStmt[] body, ASTExpr[] decorator_list, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Return->new Return(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Delete->new Delete(ASTExpr[] targets, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Assign->new Assign(ASTExpr[] targets, ASTExpr value, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_AugAssign->new AugAssign(ASTExpr target, _Operator op, ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_AnnAssign->new AnnAssign(ASTExpr target, ASTExpr annotation, ASTExpr value, boolean is_simple, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_For->new For(ASTExpr target, ASTExpr iter, ASTStmt[] body, ASTStmt[] orelse, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_AsyncFor->new AsyncFor(ASTExpr target, ASTExpr iter, ASTStmt[] body, ASTStmt[] orelse, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_While->new While(ASTExpr test, ASTStmt[] body, ASTStmt[] orelse, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_If->new If(ASTExpr test, ASTStmt[] body, ASTStmt[] orelse, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_With->new With(Withitem[] items, ASTStmt[] body, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_AsyncWith->new AsyncWith(Withitem[] items, ASTStmt[] body, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Match->new Match(ASTExpr subject, MatchCase[] cases, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Raise->new Raise(ASTExpr exc, ASTExpr cause, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Try->new Try(ASTStmt[] body, ASTExcepthandler[] handlers, ASTStmt[] orelse, ASTStmt[] finalbody, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_TryStar->new TryStar(ASTStmt[] body, ASTExcepthandler[] handlers, ASTStmt[] orelse, ASTStmt[] finalbody, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Assert->new Assert(ASTExpr test, ASTExpr msg, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Import->new Import(Alias[] names, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_ImportFrom->new ImportFrom(String module, Alias[] names, int level, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Global->new Global(String[] names, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Nonlocal->new Nonlocal(String[] names, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Expr->new Expr(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Pass->new Pass(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Break->new Break(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Continue->new Continue(int lineno, int col_offset, int end_lineno, int end_col_offset)
expr_ty->ASTExpr
_PyAST_expr->new ASTExpr(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_BoolOp->new BoolOp(_Boolop op, ASTExpr[] values, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_NamedExpr->new NamedExpr(ASTExpr target, ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_BinOp->new BinOp(ASTExpr left, _Operator op, ASTExpr right, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_UnaryOp->new UnaryOp(_Unaryop op, ASTExpr operand, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Lambda->new Lambda(Arguments args, ASTExpr body, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_IfExp->new IfExp(ASTExpr test, ASTExpr body, ASTExpr orelse, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Dict->new Dict(ASTExpr[] keys, ASTExpr[] values, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Set->new org.python.ast.Set(ASTExpr[] elts, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_ListComp->new ListComp(ASTExpr elt, Comprehension[] generators, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_SetComp->new SetComp(ASTExpr elt, Comprehension[] generators, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_DictComp->new DictComp(ASTExpr key, ASTExpr value, Comprehension[] generators, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_GeneratorExp->new GeneratorExp(ASTExpr elt, Comprehension[] generators, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Await->new Await(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Yield->new Yield(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_YieldFrom->new YieldFrom(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Compare->new Compare(ASTExpr left, _Cmpop[] ops, ASTExpr[] comparators, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Call->new Call(ASTExpr func, ASTExpr[] args, Keyword[] keywords, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_FormattedValue->new FormattedValue(ASTExpr value, int conversion, ASTExpr format_spec, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_JoinedStr->new JoinedStr(ASTExpr[] values, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Constant->new Constant(PyObject value, String kind, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Attribute->new Attribute(ASTExpr value, String attr, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Subscript->new Subscript(ASTExpr value, ASTExpr slice, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Starred->new Starred(ASTExpr value, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Name->new Name(String id, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_List->new org.python.ast.List(ASTExpr[] elts, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Tuple->new Tuple(ASTExpr[] elts, _ExprContext ctx, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_Slice->new Slice(ASTExpr lower, ASTExpr upper, ASTExpr step, int lineno, int col_offset, int end_lineno, int end_col_offset)
expr_context_ty->_ExprContext
Load->_ExprContext.Load
Store->_ExprContext.Store
Del->_ExprContext.Del
boolop_ty->_Boolop
And->_Boolop.And
Or->_Boolop.Or
operator_ty->_Operator
Add->_Operator.Add
Sub->_Operator.Sub
Mult->_Operator.Mult
MatMult->_Operator.MatMult
Div->_Operator.Div
Mod->_Operator.Mod
Pow->_Operator.Pow
LShift->_Operator.LShift
RShift->_Operator.RShift
BitOr->_Operator.BitOr
BitXor->_Operator.BitXor
BitAnd->_Operator.BitAnd
FloorDiv->_Operator.FloorDiv
unaryop_ty->_Unaryop
Invert->_Unaryop.Invert
Not->_Unaryop.Not
UAdd->_Unaryop.UAdd
USub->_Unaryop.USub
cmpop_ty->_Cmpop
Eq->_Cmpop.Eq
NotEq->_Cmpop.NotEq
Lt->_Cmpop.Lt
LtE->_Cmpop.LtE
Gt->_Cmpop.Gt
GtE->_Cmpop.GtE
Is->_Cmpop.Is
IsNot->_Cmpop.IsNot
In->_Cmpop.In
NotIn->_Cmpop.NotIn
comprehension_ty->Comprehension
_PyAST_comprehension->new Comprehension(ASTExpr target, ASTExpr iter, ASTExpr[] ifs, boolean is_async)
excepthandler_ty->ASTExcepthandler
_PyAST_excepthandler->new ASTExcepthandler(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_ExceptHandler->new ExceptHandler(ASTExpr type, String name, ASTStmt[] body, int lineno, int col_offset, int end_lineno, int end_col_offset)
arguments_ty->Arguments
_PyAST_arguments->new Arguments(Arg[] posonlyargs, Arg[] args, Arg vararg, Arg[] kwonlyargs, ASTExpr[] kw_defaults, Arg kwarg, ASTExpr[] defaults)
arg_ty->Arg
_PyAST_arg->new Arg(String arg, ASTExpr annotation, String type_comment, int lineno, int col_offset, int end_lineno, int end_col_offset)
keyword_ty->Keyword
_PyAST_keyword->new Keyword(String arg, ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
alias_ty->Alias
_PyAST_alias->new Alias(String name, String asname, int lineno, int col_offset, int end_lineno, int end_col_offset)
withitem_ty->Withitem
_PyAST_withitem->new Withitem(ASTExpr context_expr, ASTExpr optional_vars)
match_case_ty->MatchCase
_PyAST_match_case->new MatchCase(ASTPattern pattern, ASTExpr guard, ASTStmt[] body)
pattern_ty->ASTPattern
_PyAST_pattern->new ASTPattern(int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchValue->new MatchValue(ASTExpr value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchSingleton->new MatchSingleton(PyObject value, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchSequence->new MatchSequence(ASTPattern[] patterns, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchMapping->new MatchMapping(ASTExpr[] keys, ASTPattern[] patterns, String rest, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchClass->new MatchClass(ASTExpr cls, ASTPattern[] patterns, String[] kwd_attrs, ASTPattern[] kwd_patterns, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchStar->new MatchStar(String name, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchAs->new MatchAs(ASTPattern pattern, String name, int lineno, int col_offset, int end_lineno, int end_col_offset)
_PyAST_MatchOr->new MatchOr(ASTPattern[] patterns, int lineno, int col_offset, int end_lineno, int end_col_offset)
type_ignore_ty->ASTTypeIgnore
_PyAST_type_ignore->new ASTTypeIgnore()
_PyAST_TypeIgnore->new TypeIgnore(int lineno, String tag)
